<meta charset="utf-8">

<title>PenTest Database Search</title>

    <HTA:APPLICATION 

        ID="PenTestApp"

        APPLICATIONNAME="PenTest Database Search"

        BORDER="thin"

        BORDERSTYLE="normal"

        CAPTION="yes"

        SHOWINTASKBAR="yes"

        SINGLEINSTANCE="yes"

        SYSMENU="yes">

<div class="container">
    <h1>PenTest Database Search</h1>
    <div class="search-box">
        <input type="text" id="searchInput" placeholder="Enter search term..." />
        <button id="searchButton">Search</button>
    </div>
    <div id="results"></div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const searchInput = document.getElementById('searchInput');
        const searchButton = document.getElementById('searchButton');
        const resultsDiv = document.getElementById('results');

        // Função para buscar dados (simulada)
        const fetchData = async (query) => {
            try {
                // Simulação de uma chamada assíncrona (substitua por uma chamada real)
                return new Promise((resolve) => {
                    setTimeout(() => {
                        const mockData = [
                            { id: 1, title: `Result for "${query}"`, content: "This is a sample result.", link: `result/${query}` },
                            { id: 2, title: `Another result for "${query}"`, content: "Another sample result.", link: `another-result/${query}` }
                        ];
                        resolve(mockData);
                    }, 500);
                });
            } catch (error) {
                throw new Error('Failed to fetch data');
            }
        };

        // Função para exibir resultados
        const displayResults = (data) => {
            if (!data || data.length === 0) {
                resultsDiv.innerHTML = '<div class="error">No results found.</div>';
                return;
            }

            resultsDiv.innerHTML = data.map(item => `
                <div class="result-item">
                    <h3><a href="${item.link}">${item.title}</a></h3>
                    <p>${item.content}</p>
                </div>
            `).join('');
        };

        // Evento de clique no botão de busca
        searchButton.addEventListener('click', async () => {
            const query = searchInput.value.trim();
            if (!query) {
                resultsDiv.innerHTML = '<div class="error">Please enter a search term.</div>';
                return;
            }

            resultsDiv.innerHTML = '<div>Searching...</div>';
            try {
                const data = await fetchData(query);
                displayResults(data);
            } catch (error) {
                resultsDiv.innerHTML = `<div class="error">${error.message}</div>`;
            }
        });

        // Permitir busca ao pressionar Enter
        searchInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                searchButton.click();
            }
        });
    });
</script>